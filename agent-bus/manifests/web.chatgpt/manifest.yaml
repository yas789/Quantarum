# ChatGPT Web adapter
# Trust Tier: B (Uses browser automation to interact with chat.openai.com)
tool_id: web.chatgpt
version: 1.0.0
trust_tier: "B"
description: "Interact with ChatGPT through the web interface"
verbs:
  - id: web.chatgpt.chat.new
    description: Start a new chat
    args:
      type: object
      properties:
        headless:
          type: boolean
          default: false
          description: Whether to run in headless mode (no visible browser)
      additionalProperties: false
    returns:
      type: object
      properties:
        chatId:
          type: string
          description: Unique identifier for the chat session
        url:
          type: string
          format: uri
          description: URL of the new chat
    examples:
      - name: Start a new chat
        call: {}
        expect:
          chatId: "chat-123"
          url: "https://chat.openai.com/chat/abc123"

  - id: web.chatgpt.chat.send
    description: Send a message to the current chat
    args:
      type: object
      required: [message]
      properties:
        message:
          type: string
          description: Message to send to ChatGPT
        waitForResponse:
          type: boolean
          default: true
          description: Whether to wait for and return the response
        timeout:
          type: integer
          minimum: 1000
          default: 30000
          description: Maximum time to wait for response in milliseconds
      additionalProperties: false
    returns:
      type: object
      properties:
        response:
          type: string
          description: ChatGPT's response (if waitForResponse is true)
        success:
          type: boolean
          description: Whether the message was sent successfully
    examples:
      - name: Send a message and get response
        call: { message: "Hello, how are you?" }
        expect:
          response: "Hello! I'm just a computer program, so I don't have feelings, but I'm functioning well. How can I assist you today?"
          success: true

  - id: web.chatgpt.chat.history
    description: Get the chat history
    args:
      type: object
      properties:
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
          description: Maximum number of messages to return
      additionalProperties: false
    returns:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              role:
                type: string
                enum: ["user", "assistant"]
                description: Who sent the message
              content:
                type: string
                description: The message content
              timestamp:
                type: string
                format: date-time
                description: When the message was sent
    examples:
      - name: Get chat history
        call: { limit: 2 }
        expect:
          messages:
            - role: "user"
              content: "Hello, how are you?"
              timestamp: "2023-05-01T12:00:00Z"
            - role: "assistant"
              content: "Hello! I'm just a computer program, so I don't have feelings, but I'm functioning well. How can I assist you today?"
              timestamp: "2023-05-01T12:00:05Z"

  - id: web.chatgpt.chat.clear
    description: Clear the current chat
    confirm: true
    args:
      type: object
      properties: {}
      additionalProperties: false
    returns:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the chat was cleared successfully
    examples:
      - name: Clear the chat
        call: {}
        expect: { success: true }
